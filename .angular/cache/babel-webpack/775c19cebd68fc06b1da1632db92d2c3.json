{"ast":null,"code":"import PerfectScrollbar from 'perfect-scrollbar';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/config.service\";\nimport * as i2 from \"@angular/cdk/platform\";\nexport let FusePerfectScrollbarDirective = /*#__PURE__*/(() => {\n  class FusePerfectScrollbarDirective {\n    constructor(element, fuseConfig, platform) {\n      this.element = element;\n      this.fuseConfig = fuseConfig;\n      this.platform = platform;\n      this.isDisableCustomScrollbars = false;\n      this.isMobile = false;\n      this.isInitialized = true;\n      this.onSettingsChanged = this.fuseConfig.onSettingsChanged.subscribe(settings => {\n        this.isDisableCustomScrollbars = !settings.customScrollbars;\n      });\n\n      if (this.platform.ANDROID || this.platform.IOS) {\n        this.isMobile = true;\n      }\n    }\n\n    ngAfterViewInit() {\n      if (this.isMobile || this.isDisableCustomScrollbars) {\n        this.isInitialized = false;\n        return;\n      } // Initialize the perfect-scrollbar\n\n\n      this.ps = new PerfectScrollbar(this.element.nativeElement, {\n        wheelPropagation: true\n      });\n    }\n\n    ngOnDestroy() {\n      if (!this.isInitialized || !this.ps) {\n        return;\n      }\n\n      this.onSettingsChanged.unsubscribe(); // Destroy the perfect-scrollbar\n\n      this.ps.destroy();\n    }\n\n    update() {\n      if (!this.isInitialized) {\n        return;\n      } // Update the perfect-scrollbar\n\n\n      this.ps.update();\n    }\n\n    destroy() {\n      this.ngOnDestroy();\n    }\n\n    scrollToX(x, speed) {\n      this.animateScrolling('scrollLeft', x, speed);\n    }\n\n    scrollToY(y, speed) {\n      this.animateScrolling('scrollTop', y, speed);\n    }\n\n    scrollToTop(offset, speed) {\n      this.animateScrolling('scrollTop', offset || 0, speed);\n    }\n\n    scrollToLeft(offset, speed) {\n      this.animateScrolling('scrollLeft', offset || 0, speed);\n    }\n\n    scrollToRight(offset, speed) {\n      const width = this.element.nativeElement.scrollWidth;\n      this.animateScrolling('scrollLeft', width - (offset || 0), speed);\n    }\n\n    scrollToBottom(offset, speed) {\n      const height = this.element.nativeElement.scrollHeight;\n      this.animateScrolling('scrollTop', height - (offset || 0), speed);\n    }\n\n    animateScrolling(target, value, speed) {\n      if (!speed) {\n        this.element.nativeElement[target] = value; // PS has weird event sending order, this is a workaround for that\n\n        this.update();\n        this.update();\n      } else if (value !== this.element.nativeElement[target]) {\n        let newValue = 0;\n        let scrollCount = 0;\n        let oldTimestamp = performance.now();\n        let oldValue = this.element.nativeElement[target];\n        const cosParameter = (oldValue - value) / 2;\n\n        const step = newTimestamp => {\n          scrollCount += Math.PI / (speed / (newTimestamp - oldTimestamp));\n          newValue = Math.round(value + cosParameter + cosParameter * Math.cos(scrollCount)); // Only continue animation if scroll position has not changed\n\n          if (this.element.nativeElement[target] === oldValue) {\n            if (scrollCount >= Math.PI) {\n              this.element.nativeElement[target] = value; // PS has weird event sending order, this is a workaround for that\n\n              this.update();\n              this.update();\n            } else {\n              this.element.nativeElement[target] = oldValue = newValue;\n              oldTimestamp = newTimestamp;\n              window.requestAnimationFrame(step);\n            }\n          }\n        };\n\n        window.requestAnimationFrame(step);\n      }\n    }\n\n  }\n\n  FusePerfectScrollbarDirective.ɵfac = function FusePerfectScrollbarDirective_Factory(t) {\n    return new (t || FusePerfectScrollbarDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.FuseConfigService), i0.ɵɵdirectiveInject(i2.Platform));\n  };\n\n  FusePerfectScrollbarDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: FusePerfectScrollbarDirective,\n    selectors: [[\"\", \"fusePerfectScrollbar\", \"\"]]\n  });\n  return FusePerfectScrollbarDirective;\n})();","map":null,"metadata":{},"sourceType":"module"}